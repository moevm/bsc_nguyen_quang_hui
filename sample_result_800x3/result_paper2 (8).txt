Article name: 
	 Исследование существующих способов векторного представления данных диалога в линейном пространстве
Parts:
	len(526): В настоящей работе были изучены различные способы векторного представления слов в линейном пространстве. Основная цель данной статьи - формирование набора требование для реализации способа представления данных диалога в линейном пространстве на основе графов знаний для улучшения работы диалоговой системы на основе нейронных сетей посредством анализа существующих алгоритмов и моделей. В результате сравнения выявлены преимущества отдельных алгоритмов. Сформулирован перечень требований для реализации собственного алгоритма:
	len(940): Диалоговые системы - это системы предназначенные для общения с человеком. Диалоговые системы могут ограничиваться определенными задачами и темами для разговора, например для технической поддержки, или наоборот поддержать любую тему для разговора. Ранние диалоговые системы основывались на сценариях, позднее появились появились диалоговые системы с использование нейронных сетей, которые были проще в создании и разнообразнее в ответах. Так как, для обучения нейронных сетей нужны репрезентативные данные, актуальной является разработка алгоритма для представления слов в векторном пространстве[1]. Предметом исследования являются способ представления слов в векторном пространстве. Целью работы является формирование набора требований для реализации алгоритма представления данных диалога в векторном пространстве на основе графов знаний посредством анализа существующих алгоритмов. Для достижения цели потребуется решить следующие задачи:
	len(235): Freebase — большая коллаборативная база знаний, содержащая метаданные, собранные, в основном, интернет-сообществом. Это онлайн-коллекция структурированных данных, собранных из множества источников, например, отдельных вики-проектов.[2]
	len(299): GloVe - алгоритм обучения без учителя для получения векторных представлений для слов. Обучение выполняется на агрегированной глобальной статистике совпадений слово-слово из корпуса данных, и результирующие представления демонстрируют интересные линейные подструктуры векторного пространства слов.[3]
	len(651): Работа алгоритма осуществляется следующим образом: word2vec принимает большой текстовый корпус в качестве входных данных и сопоставляет каждому слову вектор, выдавая координаты слов на выходе. Сначала он генерирует словарь корпуса, а затем вычисляет векторное представление слов, «обучаясь» на входных текстах. Векторное представление основывается на контекстной близости: слова, встречающиеся в тексте рядом с одинаковыми словами (а следовательно, имеющие схожий смысл), будут иметь близкие (по косинусному расстоянию) векторы. Полученные векторные представления слов могут быть использованы для обработки естественного языка и машинного обучения.[4]
	len(202): fastText – это библиотека для обучения представлениям слов и классификации предложений. Инструмент поддерживает несколько языков, включая английский, немецкий, испанский, французский, чешский и русский.
	len(215): Для эффективной обработки массивов данных с большим количеством различных категорий fastText использует иерархический классификатор, который организовывает различные категории в древовидную структуру вместо плоской.
	len(186): Wikidata выступает в качестве центрального хранилища для структурированных данных своих родственных проектов Викимедиа, включая Wikipedia, Wikivoyage, Wiktionary, Wikisource и другие.[6]
	len(156): Требуется, что окончательное решение было написано на языке программирования Python, поэтому необходимо, чтобы и алгоритм был имплементирован на этом языке.
	len(228): Лучшим решением на основании обзора и анализа аналогов оказались оказались графы знаний WikiData и Freebase. Они позволяют улучшить результаты модели, благодаря тому, что имеют возможность выделения скрытых связей между словами.
	len(176): Способ представления данных диалога в линейном пространстве будет реализован с помощью графов знаний, нейронная сеть и все необходимые модули будут реализованы на языке Python.
	len(279): По результатам сравнительного анализа существующих решений, были выбраны решения с использованием графов знаний (FreeBase, WikiData). В планах на дальнейшие исследование разработка собственного решения, которые реализует создания графов знаний с помощью обучения с подкреплением.
------------------- KEYWORDS
диалоговая система   tensor([0.9569], device='cuda:0')   True
векторное представление данных диалога в линейном пространстве   tensor([1.], device='cuda:0')   True
графы знаний   tensor([0.4626], device='cuda:0')   False
------------------- PHRASES
представления слов   0.9890679717063904   False
способа представления данных   0.6376352310180664   False
представления данных   0.50936359167099   False
данных диалога   0.6909106373786926   False
знаний   0.6142534017562866   False
нейронных сетей   0.9795718789100647   False
алгоритмов   0.6445997357368469   False
