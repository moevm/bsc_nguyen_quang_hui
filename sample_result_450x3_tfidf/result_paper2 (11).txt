Article name: 
	 Исследование существующих методов аугментации данных
Parts:
	len(623): В настоящей работе были изучены различные методы аугментации данных. Основная цель данной статьи - формирование набора требований для реализации алгоритма аугментации микробиологических данных на основе генеративно-состязательных сетей посредством анализа существующих алгоритмов. В результате сравнения по количественным параметрам (правильность, точность, полнота) выявлены преимущества отдельных алгоритмов. В ходе практического анализа были выявлены решения, которые показали лучшие результаты по выбранным критериям, а именно GAN, SMOTE, ADASYN. Cформулирован перечень требований для реализации собственного алгоритма:
	len(152): оценка результатов полученных алгоритмов. Полученный алгоритм должен сохранить показатели точности, при этом улучшить показатели полноты и правильности.
	len(1017): В некоторых случаях из-за невозможности проведения достаточного количества экспериментов (нехватка средств или времени) проведение их анализа может быть не показательным. В таком случае требуется увеличение выборки данных через модификацию существующих данных (что и есть аугментация). Так как существующие методики аугментации в случае микробиологических данных приведут лишь к увеличению шума, то возникает задача проверки целостности данных. Поэтому актуальной является разработка алгоритма аугментации на основе генеративно-состязательных сетей, что позволит решить задачу и генерации данных, и проверки на целостность сгенерированных данных. Предметом исследования являются методы аугментации данных. Объектом исследования является аугментация данных. Целью работы является формирование набора требований для реализации алгоритма аугментации микробиологических данных на основе генеративно-состязательных сетей посредством анализа существующих алгоритмов. Для достижения цели потребуется решить следующие задачи:
	len(547): Техника передискретизации синтетического меньшинства (SMOTE) - идея алгоритма основана на добавлении некоторого набора исскуственных данных, которые являются похожими на уже существующие данные, но не дублируют их [1]. Используя алгоритм ближайшего соседа (KNN) [2], находят векторы признаков соседних примеров Xa и Xb из класса и их разность d. Вектор признака нового примера получается сложением Xa и d, каждый элемент которого умножен на случайное число из интервала (0,1). Этот алгоритм позволяет устанавливать количество данных для генерации.
	len(441): Автокодировщик (AE) - архитектура нейронных сетей, позволяющая применять обучение без учителя. Основной принцип работы - получить на выходе результат, наиболее близкий к входному значению [3]. Основной задачей автокодировщика является уменьшение шума в данных. Можно сказать, что автокодировщики могут позволять получать проекции многомерных данных, которые оказываются лучше в сравнении с данными, пoлученными методом главных кoмпонент [4].
	len(485): Вариационный автокодировщик (VAE) - генеративная модель, которая учится отображать объекты в заданное скрытое пространство (и обратно)основанная на вариационном выводе [5]. Применяется для каскадного обучения глубоких сетей и уменьшения шума в данных. В отличие от автокодировщика, который является неконтролируемым алгоритмом, вариационный автокодировщик предполагает, что исходные данные имеют некое базовое распределение вероятностей, а затем пытается найти параметры распределения.
	len(722): Основная идея адаптивного синтетического подхода к выборке несбалансированных данных (ADASYN) - использование плотности распределения Ri в качестве критерия для автоматического определения количества образцов, которые должны быть созданы для каждого примера данных. Ri является измерением распределения весов для разных классов в соответствии с их уровнем сложности в обучении [6]. Получившийся в результате набор предоставляет не только сбалансированное распределение данных, но и заставит алгоритм обучения сосредоточиться на более трудных для обучения примерах. Что является значительным отличием в сравнении с алгоритмом SMOTE, в котором равное количество синтетических наборов генерируются для каждого примера данных.
	len(550): Генеративно-состязательная сеть (GAN) -  алгоритм машинного обучения без учителя, построенный на комбинации из двух нейронных сетей, одна из которых (генератор) генерирует образцы，а другая (дискриминатор) старается отличить правильные образцы от неправильных. Генератор моделирует новый образец, смешав несколько исходных. Дискриминатор обучается различать подлинные образцы от поддельных, выводы подает генератору, чтобы тот смог подобрать набор параметров таких, при которых дискриминатор уже не сможет отличить подлинные образцы от поддельных [7].
	len(480): В качестве критериев сравнения аналогов взяты параметры результатов обучения классификатором на определенном наборе данных. Набором данных является база микробиологических данных у пациентов, прошедших диагностику рака молочной железы в штате Висконсин, США. Набор (569 образцов) разделен на две группы: 70% для обучения и 30% для тестирования. Классификатором для проверки качества генерируемых данных является классификатор дерева решений (Decision Trees) из библиотеки Sklearn.
	len(164): Наименее качественные результаты по всем пунктам показывают алгоритмы AE и VAE (VAE показывает лучший результат относительно AE, так как является его модификацией).
	len(380): Обучение классификатора с использованием данных, полученных алгоритмами SMOTE, ADASYN, GAN показывает лучшую правильность по сравнению с обучением на исходном наборе данных. Обучение по данным, полученных алгоритмом GAN показывает наибольшую точность (исключая точность, полученную по исходным данным). Наилучшую полноту показывает обучение по данным, полученных алгоритмом SMOTE.
	len(629): Решение должно представлять собой алгоритм аугментации микробиологических данных, основанный на генеративно-состязательных сетях. Для улучшения качества сгенерированных данных следует рассмотреть возможность создания алгоритма на основе генеративно-состязательных сетей и техники передискретизации синтетического меньшинства, так же на основе генеративно-состязательных сетей и адаптивного синтетического подхода к выборке несбалансированных данных. Требуется оценить результаты полученных алгоритмов и выбрать лучший. Полученный алгоритм должен сохранить показатели точности, при этом улучшить показатели полноты и правильности.
	len(428): По результатам сравнительного анализа существующих алгоритмов аугменации данных были выбраны три лучших решения (GAN, SMOTE, ADASYN). При этом наиболее предпочтительным является алгоритм GAN, показывающий наилучшую точность. В планах на дальнейшие исследования разработка собсвенного решения(GAN+SMOTE, GAN+ADASYN), которое покажет более качественные результаты по другим параметрам (правильность и полнота) и сохранит точность.
------------------- KEYWORDS
аугментация   tensor([0.6631], device='cuda:0')   True
генеративно-состязательные сети   tensor([1.0000], device='cuda:0')   True
микробиологические данные   tensor([0.3639], device='cuda:0')   False
------------------- PHRASES
настоящей работе   0.557051420211792   False
различные методы аугментации   0.5452942252159119   False
аугментации данных   0.8767184019088745   False
формирование набора   0.528548538684845   False
алгоритма   0.791907787322998   False
алгоритма аугментации   0.9777231812477112   False
состязательных сетей   0.968373715877533   False
результате сравнения   0.8302682638168335   False
правильность   0.8108035326004028   False
отдельных алгоритмов   0.5826930999755859   False
оценка результатов   0.5060333609580994   False
другим параметрам   0.5051344633102417   False
